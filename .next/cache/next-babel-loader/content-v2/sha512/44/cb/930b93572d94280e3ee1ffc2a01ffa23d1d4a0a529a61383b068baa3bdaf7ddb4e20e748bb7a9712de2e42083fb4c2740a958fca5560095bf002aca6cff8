{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rawal-k/next-app/pages/article/[id]/index.js\";\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst article = ({\n  article\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: article.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticProps = async context => {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${context.params.id}`);\n  const article = await res.json();\n  return {\n    props: {\n      article\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\n  const articles = await res.json();\n  const ids = articles.map(article => article.id);\n  const paths = ids.map(id => ({\n    params: {\n      id: id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport default article;","map":{"version":3,"sources":["/home/rawal-k/next-app/pages/article/[id]/index.js"],"names":["Link","useRouter","article","router","id","query","title","body","getStaticProps","context","res","fetch","params","json","props","getStaticPaths","articles","ids","map","paths","toString","fallback"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACA,EAAAA;AAAD,CAAD,KAAe;AAC9B,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,sBACC;AAAA,4BACC;AAAA,gBAAKH,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAIJ,OAAO,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA,kBADD;AAQA,CAZD;;AAcA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAChD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,8CAA6CF,OAAO,CAACG,MAAR,CAAeR,EAAG,EAAjE,CAAvB;AAEA,QAAMF,OAAO,GAAG,MAAMQ,GAAG,CAACG,IAAJ,EAAtB;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNZ,MAAAA;AADM;AADD,GAAP;AAKA,CAVM;AAYP,OAAO,MAAMa,cAAc,GAAG,YAAY;AACzC,QAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,4CAAF,CAAvB;AAEA,QAAMK,QAAQ,GAAG,MAAMN,GAAG,CAACG,IAAJ,EAAvB;AAEA,QAAMI,GAAG,GAAGD,QAAQ,CAACE,GAAT,CAAahB,OAAO,IAAIA,OAAO,CAACE,EAAhC,CAAZ;AAEA,QAAMe,KAAK,GAAGF,GAAG,CAACC,GAAJ,CAAQd,EAAE,KAAK;AAACQ,IAAAA,MAAM,EAAE;AAACR,MAAAA,EAAE,EAAEA,EAAE,CAACgB,QAAH;AAAL;AAAT,GAAL,CAAV,CAAd;AAEA,SAAO;AACND,IAAAA,KADM;AAENE,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA,CAbM;AAiBP,eAAenB,OAAf","sourcesContent":["import Link from 'next/link'\nimport { useRouter } from 'next/router'\n\n\nconst article = ({article}) => {\n\tconst router = useRouter()\n\tconst { id } = router.query\n\n\treturn (\n\t\t<>\n\t\t\t<h1>{article.title}</h1>\n\t\t\t<p>{article.body}</p>\n\t\t\t<br />\n\t\t\t<Link href='/'>Go Back</Link>\n\t\t</>\n\t)\n}\n\nexport const getStaticProps = async (context) => {\n\tconst res = await fetch(`https://jsonplaceholder.typicode.com/posts/${context.params.id}`)\n\t\n\tconst article = await res.json()\n\n\treturn {\n\t\tprops: {\n\t\t\tarticle\n\t\t}\n\t}\n}\n\nexport const getStaticPaths = async () => {\n\tconst res = await fetch(`https://jsonplaceholder.typicode.com/posts`)\n\t\t\n\tconst articles = await res.json()\n\n\tconst ids = articles.map(article => article.id)\n\n\tconst paths = ids.map(id => ({params: {id: id.toString()}}))\t\n\n\treturn {\n\t\tpaths,\n\t\tfallback: false\n\t}\t \n} \n\n\n\nexport default article\n"]},"metadata":{},"sourceType":"module"}