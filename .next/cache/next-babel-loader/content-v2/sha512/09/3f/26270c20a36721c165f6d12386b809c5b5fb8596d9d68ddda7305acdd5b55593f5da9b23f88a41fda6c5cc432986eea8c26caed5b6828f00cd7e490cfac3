{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rawal-k/next-app/pages/article/[id]/index.js\";\nimport { useRouter } from 'next/router';\n\nconst article = ({\n  article\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" This is article \", id, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getStaticProps = async context => {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${context.params.id}`);\n  const articles = await res.json();\n  const ids = articles.map(article => article.id);\n  const paths = ids.map(id => ({\n    params: {\n      id: id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport default article;","map":{"version":3,"sources":["/home/rawal-k/next-app/pages/article/[id]/index.js"],"names":["useRouter","article","router","id","query","getStaticProps","context","res","fetch","params","articles","json","ids","map","paths","toString","fallback"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACA,EAAAA;AAAD,CAAD,KAAe;AAC9B,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,sBAAO;AAAA,oCAAuBD,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CALD;;AASA,OAAO,MAAME,cAAc,GAAG,MAAMC,OAAN,IAAkB;AAC/C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,8CAA6CF,OAAO,CAACG,MAAR,CAAeN,EAAG,EAAjE,CAAvB;AAEA,QAAMO,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAvB;AAEA,QAAMC,GAAG,GAAGF,QAAQ,CAACG,GAAT,CAAaZ,OAAO,IAAIA,OAAO,CAACE,EAAhC,CAAZ;AAEA,QAAMW,KAAK,GAAGF,GAAG,CAACC,GAAJ,CAAQV,EAAE,KAAK;AAACM,IAAAA,MAAM,EAAE;AAACN,MAAAA,EAAE,EAAEA,EAAE,CAACY,QAAH;AAAL;AAAT,GAAL,CAAV,CAAd;AAEA,SAAO;AACND,IAAAA,KADM;AAENE,IAAAA,QAAQ,EAAE;AAFJ,GAAP;AAIA,CAbM;AAgBP,eAAef,OAAf","sourcesContent":["import { useRouter } from 'next/router'\n\n\nconst article = ({article}) => {\n\tconst router = useRouter()\n\tconst { id } = router.query\n\n\treturn <div> This is article {id} </div>\n}\n\n\n\nexport const getStaticProps = async(context) => {\n\tconst res = await fetch(`https://jsonplaceholder.typicode.com/posts/${context.params.id}`)\n\t\n\tconst articles = await res.json()\n\n\tconst ids = articles.map(article => article.id)\n\n\tconst paths = ids.map(id => ({params: {id: id.toString()}}))\t\n\t\t\n\treturn {\n\t\tpaths,\n\t\tfallback: false\n\t}\n}\n\n\nexport default article\n"]},"metadata":{},"sourceType":"module"}